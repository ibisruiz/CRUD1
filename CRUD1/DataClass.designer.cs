#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRUD1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CRUD")]
	public partial class DataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCRUDTable(CRUDTable instance);
    partial void UpdateCRUDTable(CRUDTable instance);
    partial void DeleteCRUDTable(CRUDTable instance);
    #endregion
		
		public DataClassDataContext() : 
				base(global::CRUD1.Properties.Settings.Default.CRUDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CRUDTable> CRUDTables
		{
			get
			{
				return this.GetTable<CRUDTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRUDTable")]
	public partial class CRUDTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_productos;
		
		private string _nombre_producto;
		
		private decimal _precio_producto;
		
		private int _disponibilidad_producto;
		
		private string _descripcion_producto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_productosChanging(int value);
    partial void Onid_productosChanged();
    partial void Onnombre_productoChanging(string value);
    partial void Onnombre_productoChanged();
    partial void Onprecio_productoChanging(decimal value);
    partial void Onprecio_productoChanged();
    partial void Ondisponibilidad_productoChanging(int value);
    partial void Ondisponibilidad_productoChanged();
    partial void Ondescripcion_productoChanging(string value);
    partial void Ondescripcion_productoChanged();
    #endregion
		
		public CRUDTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_productos", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_productos
		{
			get
			{
				return this._id_productos;
			}
			set
			{
				if ((this._id_productos != value))
				{
					this.Onid_productosChanging(value);
					this.SendPropertyChanging();
					this._id_productos = value;
					this.SendPropertyChanged("id_productos");
					this.Onid_productosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_producto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre_producto
		{
			get
			{
				return this._nombre_producto;
			}
			set
			{
				if ((this._nombre_producto != value))
				{
					this.Onnombre_productoChanging(value);
					this.SendPropertyChanging();
					this._nombre_producto = value;
					this.SendPropertyChanged("nombre_producto");
					this.Onnombre_productoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio_producto", DbType="Decimal(10,2) NOT NULL")]
		public decimal precio_producto
		{
			get
			{
				return this._precio_producto;
			}
			set
			{
				if ((this._precio_producto != value))
				{
					this.Onprecio_productoChanging(value);
					this.SendPropertyChanging();
					this._precio_producto = value;
					this.SendPropertyChanged("precio_producto");
					this.Onprecio_productoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disponibilidad_producto", DbType="Int NOT NULL")]
		public int disponibilidad_producto
		{
			get
			{
				return this._disponibilidad_producto;
			}
			set
			{
				if ((this._disponibilidad_producto != value))
				{
					this.Ondisponibilidad_productoChanging(value);
					this.SendPropertyChanging();
					this._disponibilidad_producto = value;
					this.SendPropertyChanged("disponibilidad_producto");
					this.Ondisponibilidad_productoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion_producto", DbType="VarChar(100)")]
		public string descripcion_producto
		{
			get
			{
				return this._descripcion_producto;
			}
			set
			{
				if ((this._descripcion_producto != value))
				{
					this.Ondescripcion_productoChanging(value);
					this.SendPropertyChanging();
					this._descripcion_producto = value;
					this.SendPropertyChanged("descripcion_producto");
					this.Ondescripcion_productoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
